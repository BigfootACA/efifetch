import re
import sys

allowed_vendors = {
	'0014': 'Loongson',
	'0731': 'Jingjia Microelectronics',
	'1002': 'AMD',
	'1013': 'Cirrus',
	'1014': 'IBM',
	'102B': 'Matrox',
	'1033': 'NEC',
	'1039': 'SiS',
	'1091': 'Intergraph',
	'10DE': 'NVIDIA',
	'1106': 'VIA',
	'121A': '3dFX',
	'1414': 'Microsoft',
	'15AD': 'VMware',
	'19E5': 'Huawei',
	'1A03': 'Aspeed',
	'1AF4': 'Virtio',
	'1B36': 'RedHat',
	'1CAD': 'Apeed',
	'1D17': 'Zhaoxin',
	'1ED5': 'Moore Threads',
	'1FB0': 'ICube',
	'8086': 'Intel',
	'80EE': 'Innotek',
	'FFFE': 'VMware',
}

gpu_keywords = [
	'Radeon', 'GeForce', 'Quadro', 'Tesla', 'GRID', 'RTX', 'GTX', 'VGA',
	'Arc', 'Iris', 'UHD Graphics', 'HD Graphics', 'FirePro', 'Instinct',
	'Voodoo', 'Matrox', 'G200', 'G400', 'G450', 'G550', 'GD', 'graphic',
	'MTT', 'Moore Threads', 'Apeed', 'SVGA', 'Virtio', 'GPU', 'QXL', 'JM',
	'Display', 'AGP',
]

gpu_blacklist = [
	'Alpine', 'Nordic', 'Viking', 'Nordic', 'CLM', 'iBMC',
	'Intel Graphics', 'UHD Graphics', 'HD Graphics', 'Xe Graphics',
]

device_blacklist = [
	{"vendor_id": "8086", "device_id": "A70D"},
]

addition_devices = [
	{
		"vendor_id": "1234",
		"device_id": "1111",
		"name": "QEMU Bochs VGA",
	}
]

def patch_item(item: dict) -> bool:
	blacklist = [
		"QuickPath Architecture",
		"High Definition Audio",
		"switch", "bridge", "Dummy", "JPEG",
	]
	vid: str = item["vendor_id"]
	name: str = item["name"]
	lname = name.lower()
	if vid == "102B":
		if name.startswith("Integrated Matrox"):
			name = name[11:]
	if vid in allowed_vendors:
		vendor = allowed_vendors[vid]
		if lname.startswith(vendor.lower() + " "):
			name = name[len(vendor) + 1:]
	if " and " in name:
		name = name.split(" and ")[0]
	if " / " in name:
		name = name.split(" / ")[0]
	if "/" in name:
		name = name.split("/")[0]
	if " (customized " in name:
		name = name.split(" (customized ")[0]
	if " Rev." in name:
		name = name.split(" Rev.")[0]
	if "Engineering Sample" in name:
		name = name.replace("Engineering Sample", "ES")
	if "All-In-Wonder " in name:
		name = name.replace("All-In-Wonder ", "")
	if "All-in-Wonder " in name:
		name = name.replace("All-in-Wonder ", "")
	if " Mac Edition" in name:
		name = name.replace(" Mac Edition", "")
	if " Green Edition" in name:
		name = name.replace(" Green Edition", "")
	if " Graphics Controller" in name:
		name = name.replace(" Graphics Controller", "")
	if " Ada Generation" in name:
		name = name.replace(" Ada Generation", "")
	if " Platinum Edition" in name:
		name = name.replace(" Platinum Edition", "")
	if " Graphics Adapter" in name:
		name = name.replace(" Graphics Adapter", "")
	if " Graphics" in name:
		name = name.replace(" Graphics", "")
	if any(black.lower() in lname for black in blacklist):
		return False
	if len(name) > 32:
		print(f"too long {len(name)} {name} / {item["name"]}")
	item["orig_name"] = item["name"]
	item["name"] = name
	return True

def process(input: str, output: str):
	gpu_devices = []
	with open(input, 'r', encoding='utf-8', errors='ignore') as f:
		current_vendor_id = None
		for line in f:
			if line.startswith('#') or not line.strip():
				continue
			vendor_match = re.match(r'^([0-9a-fA-F]{4})\s+(.*)', line)
			if vendor_match and not line.startswith('\t'):
				vendor_id = vendor_match.group(1).lower()
				if vendor_id.upper() in allowed_vendors:
					current_vendor_id = vendor_id.upper()
				else:
					current_vendor_id = None
				continue
			if current_vendor_id and line.startswith('\t') and not line.startswith('\t\t'):
				device_match = re.match(r'^\t([0-9a-fA-F]{4})\s+(.*)', line)
				if device_match:
					device_id = device_match.group(1).upper()
					device_name = device_match.group(2).strip()
					bracket_match = re.search(r'\[(.*?)\]', device_name)
					if any(device_id == item["device_id"] and current_vendor_id == item["vendor_id"] for item in device_blacklist):
						continue 
					if not any(keyword.lower() in device_name.lower() for keyword in gpu_keywords):
						continue
					if bracket_match:
						new_name = bracket_match.group(1).strip()
						if any(keyword.lower() in new_name.lower() for keyword in gpu_blacklist):
							d = f"[{new_name}]"
							if device_name.endswith(d):
								device_name = device_name[:-len(d)].strip()
						else:
							device_name = new_name
					item = {
						"vendor_id": current_vendor_id,
						"device_id": device_id,
						"name": device_name
					}
					if patch_item(item):
						gpu_devices.append(item)
	gpu_devices.extend(addition_devices)
	gpu_devices.sort(key=lambda x: (x['vendor_id'], x['device_id']))
	with open(output, 'w', encoding='utf-8') as f_out:
		f_out.write("#include\"data.h\"\n")
		f_out.write("// Automatically generated by gpu-list.py\n")
		f_out.write("// From pci.ids\n")
		f_out.write("GPU_DB_START\n")
		for item in allowed_vendors:
			f_out.write(f"GPU_DB_VENDOR(0x{item},\"{allowed_vendors[item]}\")\n")
		for item in gpu_devices:
			f_out.write(f"GPU_DB_ITEM(0x{item["vendor_id"]},0x{item["device_id"]},\"{item["name"]}\")\n")
		f_out.write("GPU_DB_END\n")

def main():
	if len(sys.argv) != 3:
		print("Usage: python gpu-list.py <input_file> <output_file>")
		sys.exit(1)
	process(sys.argv[1], sys.argv[2])

if __name__ == "__main__":
	main()
